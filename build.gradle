plugins {
    id 'fabric-loom' version '1.0-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

repositories {
    // Add repositories to retrieve artifacts from in here.
    // You should only use this when depending on other mods because
    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
    // for more information about repositories.
    mavenCentral()
    mavenLocal()
    maven {
        url 'https://jitpack.io'
    }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url 'https://m2.dv8tion.net/releases' }
    maven { url "https://mvnrepository.com/artifact/io.projectreactor/reactor-bom" }

}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

        // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    implementation include('me.carleslc.Simple-YAML:Simple-Yaml:1.8.4')
    implementation include('com.discord4j:discord4j-core:3.2.4')
    implementation include("com.discord4j:discord4j-rest:3.2.3")
    implementation include("com.discord4j:discord4j-common:3.2.3")
    implementation include("com.discord4j:discord4j-gateway:3.2.3")
    implementation include("com.discord4j:discord4j-voice:3.2.3")
    implementation include("com.discord4j:simple-fsm:1.0.1")
    implementation include("com.discord4j:discord-json:1.6.14")
    implementation include("com.discord4j:discord-json-api:1.6.13")
    implementation include("com.github.ben-manes.caffeine:caffeine:2.8.8")
    implementation include("io.projectreactor:reactor-core:3.4.22")
    implementation include("io.projectreactor.addons:reactor-extra:3.4.8")
    implementation include("io.projectreactor.netty:reactor-netty-core:1.0.22")
    implementation include("io.projectreactor.netty:reactor-netty-http:1.0.22")
    implementation include('org.reactivestreams:reactive-streams:1.0.0.final')
    implementation include("io.netty:netty-resolver-dns:4.1.79.Final")
    implementation include("io.netty:netty-handler:4.1.79.Final")
    implementation include("io.netty:netty-codec-http:4.1.79.Final")
    implementation include("io.netty:netty-codec-http2:4.1.79.Final")
    implementation include("io.netty:netty-codec-dns:4.1.79.Final")
    implementation include("com.fasterxml.jackson.core:jackson-databind:2.12.7")
    implementation include("com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.12.7")
    implementation include("com.fasterxml.jackson.core:jackson-annotations:2.12.7")
    implementation include("com.fasterxml.jackson.core:jackson-core:2.12.7")
    }

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "loader_version", project.loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": project.minecraft_version,
                "loader_version": project.loader_version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
configurations.all {
    resolutionStrategy {
        force("net.fabricmc:fabric-loader:$loader_version")
    }
}